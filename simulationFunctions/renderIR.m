function [  ] = renderIR( directories,camera )
%RENDERIR: Creates the infrared Renders from Blender using the python
%Script 'simulate_ir.py' loacted in the folder 'Python_Scripts'
%The rendered data are saved in the folder 'Infrared_Renders'
% - directories := The defined paths for the scene and the output
% - camera      := The defined camera and scene settings


q=char(39); % Cahracter '

% read the python script
contents_ir  = fileread(directories.irpythonfile);
% Change the Parameters in the Python SCript
newcontents_ir = regexprep(contents_ir, ...
    {'^blendfilepath\S* = \S*', '^camerafocallen\S* = \S*\d+', ...
    '^camerawidth\S* = \S*\d+', '^ir_resolution_x\S* = \S*\d+', ...
    '^ir_resolution_y\S* = \S*\d+','^outputfile\S* = \S*',...
    '^filename\S* = \S*','^numofFrames\S* = \S*\d+','^fps\S* = \S*\d+'}, ...
    {sprintf('blendfilepath = %s', [q,directories.blendfilepath,q]), ...
    sprintf('camerafocallen = %d', camera.focalLen),...
    sprintf('camerawidth = %d',camera.dimension_width),...
    sprintf('ir_resolution_x = %d', camera.ir_numPx_x),...
    sprintf('ir_resolution_y = %d', camera.ir_numPx_y),...
    sprintf('outputfile = %s', [q,directories.outputfile_ir,q]), ...
    sprintf('filename = %s', [q,directories.filename_ir,q]),...
    sprintf('numofFrames = %d',camera.numofFrames),...
    sprintf('fps = %d',camera.fps)},'lineanchors');
fid_ir = fopen(directories.irpythonfile,'w');
fwrite(fid_ir, newcontents_ir);
fclose(fid_ir);
% Render the Infrared Animation
Command_ir = [directories.Blender_path,' ','--background',' ','--python',' ',directories.irpythonfile];
system(Command_ir);
disp('Infrared Rendering Finished')

end

